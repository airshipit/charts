loki-stack:
  loki:
    enabled: true
    persistence:
      enabled: true
    ingress:
      enabled: true
      hosts:
        - host: loki.jarvis.local
          paths: ["/"]
      annotations:
        cert-manager.io/cluster-issuer: jarvis-ca-issuer
      tls:
        - secretName: lokistack-loki-tls
          hosts:
            - loki.jarvis.local

  promtail:
    enabled: true
    readinessProbe:
      httpGet:
        path: /
    scrapeConfigs:
      - job_name: kubernetes-pods-name
        pipeline_stages:
          - docker: {}
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels:
          - __meta_kubernetes_pod_label_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: kube-system
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: cert-manager
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: gerrit
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: harbor
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ingress-nginx
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ldap
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana-sc-datasources
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: drop
          regex: promtail
      - job_name: kubernetes-pods-app
        pipeline_stages:
          - docker: {}
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          source_labels:
          - __meta_kubernetes_pod_label_name
        - source_labels:
          - __meta_kubernetes_pod_label_app
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: kube-system
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: cert-manager
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: gerrit
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: harbor
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ingress-nginx
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ldap
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana-sc-datasources
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: drop
          regex: promtail
      - job_name: kubernetes-pods-direct-controllers
        pipeline_stages:
          - docker: {}
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          separator: ''
          source_labels:
          - __meta_kubernetes_pod_label_name
          - __meta_kubernetes_pod_label_app
        - action: drop
          regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
          source_labels:
          - __meta_kubernetes_pod_controller_name
        - source_labels:
          - __meta_kubernetes_pod_controller_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: kube-system
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: cert-manager
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: gerrit
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: harbor
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ingress-nginx
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ldap
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana-sc-datasources
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: drop
          regex: promtail
      - job_name: kubernetes-pods-indirect-controller
        pipeline_stages:
          - docker: {}
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          separator: ''
          source_labels:
          - __meta_kubernetes_pod_label_name
          - __meta_kubernetes_pod_label_app
        - action: keep
          regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
          source_labels:
          - __meta_kubernetes_pod_controller_name
        - action: replace
          regex: '([0-9a-z-.]+)-[0-9a-f]{8,10}'
          source_labels:
          - __meta_kubernetes_pod_controller_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: kube-system
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: cert-manager
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: gerrit
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: harbor
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ingress-nginx
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ldap
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana-sc-datasources
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: drop
          regex: promtail
      - job_name: kubernetes-pods-static
        pipeline_stages:
          - docker: {}
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: ''
          source_labels:
          - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_label_component
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
          - __meta_kubernetes_pod_container_name
          target_label: __path__
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: kube-system
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: cert-manager
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: gerrit
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: harbor
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ingress-nginx
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: ldap
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: drop
          regex: grafana-sc-datasources
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: drop
          regex: promtail


  grafana:
    testFramework:
      image: "bats/bats"
      tag: "1.2.1"
    adminPassword: password
    enabled: true
    persistence:
      enabled: true
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: PromLoki
            type: prometheus
            url: http://loki:3100/loki/
            access: proxy
    grafana.ini:
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Viewer
      auth.ldap:
        enabled: true
    ldap:
      enabled: true
      config: |-
        [[servers]]
        host = "ldap-openldap.ldap.svc.cluster.local"
        port = 389
        use_ssl = false
        start_tls = false
        ssl_skip_verify = false
        bind_dn = "cn=readonly,dc=jarvis,dc=local"
        bind_password = "readonly"
        search_base_dns = ["dc=jarvis,dc=local"]
        search_filter = "(uid=%s)"
        [[servers.group_mappings]]
        group_dn = "cn=jarvis-admins,ou=Groups,dc=jarvis,dc=local"
        org_role = "Admin"
        grafana_admin = true
        [[servers.group_mappings]]
        group_dn = "*"
        org_role = "Viewer"
        [servers.attributes]
        email = "mail"
    ingress:
      enabled: true
      path: /
      hosts:
        - grafana.jarvis.local
      annotations:
        cert-manager.io/cluster-issuer: jarvis-ca-issuer
      tls:
        - secretName: lokistack-grafana-tls
          hosts:
            - grafana.jarvis.local
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        tekton-pipelines:
          json: |
            {
              "annotations": {
                "list": [
                  {
                    "builtIn": 1,
                    "datasource": "-- Grafana --",
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                  }
                ]
              },
              "description": "Tekton Logs Dashboard",
              "editable": true,
              "gnetId": null,
              "graphTooltip": 0,
              "id": null,
              "iteration": 1610656127596,
              "links": [],
              "panels": [
                {
                  "aliasColors": {},
                  "bars": true,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "Loki",
                  "fieldConfig": {
                    "defaults": {
                      "custom": {}
                    },
                    "overrides": []
                  },
                  "fill": 1,
                  "fillGradient": 0,
                  "gridPos": {
                    "h": 8,
                    "w": 24,
                    "x": 0,
                    "y": 0
                  },
                  "hiddenSeries": false,
                  "id": 6,
                  "legend": {
                    "avg": false,
                    "current": false,
                    "max": false,
                    "min": false,
                    "show": false,
                    "total": false,
                    "values": false
                  },
                  "lines": false,
                  "linewidth": 1,
                  "nullPointMode": "null",
                  "options": {
                    "dataLinks": []
                  },
                  "percentage": false,
                  "pointradius": 2,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [],
                  "spaceLength": 10,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                    {
                      "expr": "sum(count_over_time({namespace=~\"$namespace\", tekton_dev_pipeline=~\"$tekton_dev_pipeline\", tekton_dev_pipelineRun=~\"$tekton_dev_pipelineRun\", tekton_dev_taskRun=~\"$tekton_dev_taskRun\"} |~ \"$search\"[$__interval]))",
                      "refId": "A"
                    }
                  ],
                  "thresholds": [],
                  "timeFrom": null,
                  "timeRegions": [],
                  "timeShift": null,
                  "title": "Timeline",
                  "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                  },
                  "type": "graph",
                  "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                  },
                  "yaxes": [
                    {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                    },
                    {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                    }
                  ],
                  "yaxis": {
                    "align": false,
                    "alignLevel": null
                  }
                },
                {
                  "datasource": "Loki",
                  "fieldConfig": {
                    "defaults": {
                      "custom": {}
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 25,
                    "w": 24,
                    "x": 0,
                    "y": 8
                  },
                  "id": 2,
                  "maxDataPoints": "",
                  "options": {
                    "showLabels": true,
                    "showTime": true,
                    "sortOrder": "Descending",
                    "wrapLogMessage": true
                  },
                  "targets": [
                    {
                      "expr": "{namespace=~\"$namespace\", tekton_dev_pipeline=~\"$tekton_dev_pipeline\", tekton_dev_pipelineRun=~\"$tekton_dev_pipelineRun\", tekton_dev_taskRun=~\"$tekton_dev_taskRun\"} |~ \"$search\"",
                      "refId": "A"
                    }
                  ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Logs",
                  "type": "logs"
                }
              ],
              "refresh": false,
              "schemaVersion": 22,
              "style": "dark",
              "tags": [],
              "templating": {
                "list": [
                  {
                    "allValue": null,
                    "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                    },
                    "datasource": "PromLoki",
                    "definition": "label_values(namespace)",
                    "hide": 0,
                    "includeAll": true,
                    "index": -1,
                    "label": "Namespace",
                    "multi": false,
                    "name": "namespace",
                    "options": [],
                    "query": "label_values(namespace)",
                    "refresh": 1,
                    "regex": "/.*^(?!loki)/",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                  },
                  {
                    "allValue": "",
                    "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                    },
                    "datasource": "PromLoki",
                    "definition": "label_values({namespace=\"$namespace\"}, tekton_dev_pipeline)",
                    "hide": 0,
                    "includeAll": true,
                    "index": -1,
                    "label": "Tekton Pipeline",
                    "multi": false,
                    "name": "tekton_dev_pipeline",
                    "options": [],
                    "query": "label_values({namespace=\"$namespace\"}, tekton_dev_pipeline)",
                    "refresh": 1,
                    "regex": "^.*",
                    "skipUrlSync": false,
                    "sort": 5,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                  },
                  {
                    "allValue": "",
                    "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                    },
                    "datasource": "PromLoki",
                    "definition": "label_values({namespace=\"$namespace\",tekton_dev_pipeline=\"$tekton_dev_pipeline\"}, tekton_dev_pipelineRun)",
                    "hide": 0,
                    "includeAll": true,
                    "index": -1,
                    "label": "Tekton Pipeline Run",
                    "multi": false,
                    "name": "tekton_dev_pipelineRun",
                    "options": [],
                    "query": "label_values({namespace=\"$namespace\",tekton_dev_pipeline=\"$tekton_dev_pipeline\"}, tekton_dev_pipelineRun)",
                    "refresh": 1,
                    "regex": ".*",
                    "skipUrlSync": false,
                    "sort": 5,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                  },
                  {
                    "allValue": "",
                    "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                    },
                    "datasource": "PromLoki",
                    "definition": "label_values({namespace=\"$namespace\",tekton_dev_pipeline=\"$tekton_dev_pipeline\",tekton_dev_pipelineRun=\"$tekton_dev_pipelineRun\"}, tekton_dev_taskRun)",
                    "hide": 0,
                    "includeAll": true,
                    "index": -1,
                    "label": "Tekton Task Run",
                    "multi": false,
                    "name": "tekton_dev_taskRun",
                    "options": [],
                    "query": "label_values({namespace=\"$namespace\",tekton_dev_pipeline=\"$tekton_dev_pipeline\",tekton_dev_pipelineRun=\"$tekton_dev_pipelineRun\"}, tekton_dev_taskRun)",
                    "refresh": 1,
                    "regex": "^.*",
                    "skipUrlSync": false,
                    "sort": 5,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                  },
                  {
                    "current": {
                      "selected": false,
                      "text": "",
                      "value": ""
                    },
                    "hide": 0,
                    "label": null,
                    "name": "search",
                    "options": [
                      {
                        "selected": true,
                        "text": "",
                        "value": ""
                      }
                    ],
                    "query": "",
                    "skipUrlSync": false,
                    "type": "textbox"
                  }
                ]
              },
              "time": {
                "from": "now-24h",
                "to": "now"
              },
              "timepicker": {
                "refresh_intervals": [
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
                ]
              },
              "timezone": "",
              "title": "Loki Pipeline Logs Dashboard",
              "uid": "lokiPipelineDash",
              "variables": {
                "list": []
              },
              "version": 1
            }
